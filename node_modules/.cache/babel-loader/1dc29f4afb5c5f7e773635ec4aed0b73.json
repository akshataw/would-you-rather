{"ast":null,"code":"import _classCallCheck from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/akshata/my-would-you-rather/src/components/HomePage.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      answeredQues: true\n    };\n    _this.AnsweredMode = _this.AnsweredMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.UnansweredMode = _this.UnansweredMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"AnsweredMode\",\n    value: function AnsweredMode() {\n      if (this.state.answeredQues) {\n        this.setState({\n          answeredQues: true\n        });\n      } else {\n        this.setState({\n          answeredQues: false\n        });\n      }\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"UnansweredMode\",\n    value: function UnansweredMode() {\n      if (!this.state.answeredQues) {\n        this.setState({\n          answeredQues: false\n        });\n      } else {\n        this.setState({\n          answeredQues: true\n        });\n      }\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          answered = _this$props.answered,\n          unanswered = _this$props.unanswered,\n          auth = _this$props.auth,\n          user = _this$props.user;\n      var answeredQues = this.state.answeredQues;\n\n      if (auth === null) {\n        return React.createElement(Redirect, {\n          to: \"/loginpage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(UserBar, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"questions\",\n        Style: \"float:right;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: answeredQues ? 'answered active-link' : 'answered',\n        onClick: this.AnsweredMode,\n        Style: \"height:50px; font-size:22px; background: #2ECC71; border: 2px solid #229954; border-radius:6px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Answered\"), \"\\xA0\", React.createElement(\"button\", {\n        className: answeredQues ? 'unanswered' : 'unanswered active-link',\n        onClick: this.UnansweredMode,\n        Style: \"height:50px; font-size:22px; background: blue; border: 2px solid #229954; border-radius:6px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Unanswered\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, answeredQues && answered.map(function (question) {\n        return React.createElement(Questions, {\n          question: question,\n          answer: user.answers[question.id],\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }), !answeredQues && unanswered.map(function (question) {\n        return React.createElement(Questions, {\n          question: question,\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nfunction mapStateToProps(_ref) {\n  var questions = _ref.questions,\n      users = _ref.users,\n      auth = _ref.auth;\n  var user;\n  var answered = [];\n  var unanswered = [];\n\n  if (auth !== null) {\n    user = users[auth];\n  }\n\n  Object.keys(questions).map(function (que) {\n    return questions[que];\n  }).filter(function (question) {\n    if (user.answers.hasOwnProperty(question.id)) {\n      answered.push(question);\n    } else {\n      unanswered.push(question);\n    }\n  });\n  return {\n    answered: answered,\n    unanswered: unanswered,\n    auth: auth,\n    user: user\n  };\n}\n\nexport default connect(mapStateToProps)(HomePage);","map":{"version":3,"sources":["/home/akshata/my-would-you-rather/src/components/HomePage.js"],"names":["React","NavBar","UserBar","Redirect","connect","Questions","HomePage","props","state","answeredQues","AnsweredMode","bind","UnansweredMode","setState","forceUpdate","answered","unanswered","auth","user","map","question","answers","id","Component","mapStateToProps","questions","users","Object","keys","que","filter","hasOwnProperty","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n\nclass HomePage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      answeredQues: true\n    }\n    this.AnsweredMode = this.AnsweredMode.bind(this)\n    this.UnansweredMode = this.UnansweredMode.bind(this)\n  }\n\n  AnsweredMode(){\n    if(this.state.answeredQues){\n      this.setState({\n        answeredQues: true\n      })\n    }\n    else{\n      this.setState({\n        answeredQues: false\n      })\n    }\n    this.forceUpdate()\n  }\n\n  UnansweredMode(){\n    if(!this.state.answeredQues){\n      this.setState({\n        answeredQues: false\n      })\n    }\n    else{\n      this.setState({\n        answeredQues: true\n      })\n    }\n    this.forceUpdate()\n  }\n\n  render(){\n    const { answered, unanswered, auth, user } = this.props\n    const { answeredQues } = this.state\n    if(auth === null){\n      return <Redirect to='/loginpage' />\n    }\n    return(\n      <div className=\"container\">\n        <NavBar />\n       <UserBar user={ user } />\n       <br/>\n       <div className=\"questions\" Style=\"float:right;\">\n        <button className={ answeredQues ? 'answered active-link' : 'answered'} onClick={this.AnsweredMode} Style=\"height:50px; font-size:22px; background: #2ECC71; border: 2px solid #229954; border-radius:6px;\">Answered</button>&nbsp;\n        <button className={ answeredQues ? 'unanswered' : 'unanswered active-link'} onClick={this.UnansweredMode} Style=\"height:50px; font-size:22px; background: blue; border: 2px solid #229954; border-radius:6px;\">Unanswered</button>\n       </div>\n       <br/>\n       <br/>\n       <div >\n       <div className=\"question-set\">\n        <center>\n        { answeredQues &&  answered.map(question => (\n          <Questions question={question} answer={user.answers[question.id]}  key={question.id} />\n        ))}\n        { !answeredQues &&  unanswered.map(question => (\n          <Questions question={question} key={question.id} />\n        ))}\n        </center>\n        </div>\n       </div>\n    </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, users, auth}){\n  let user\n  let answered = []\n  let unanswered = []\n  if(auth !== null){\n    user = users[auth]\n  }\n  Object.keys(questions).map(que => questions[que]).filter(question => {\n    if(user.answers.hasOwnProperty(question.id)){\n      answered.push(question)\n    }\n    else{\n      unanswered.push(question)\n    }\n  })\n  return{\n    answered,\n    unanswered,\n    auth,\n    user\n  }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}