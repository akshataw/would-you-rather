{"ast":null,"code":"import _classCallCheck from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/akshata/Documents/my-would-you-rather/src/components/MyQuestions.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport Questions from './Questions';\nimport { Redirect } from 'react-router-dom';\n\nvar MyQuestions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyQuestions, _React$Component);\n\n  function MyQuestions(props) {\n    var _this;\n\n    _classCallCheck(this, MyQuestions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyQuestions).call(this, props));\n    _this.state = {\n      currentLocation: window.location.pathname\n    };\n    return _this;\n  }\n\n  _createClass(MyQuestions, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          questions = _this$props.questions,\n          user = _this$props.user,\n          auth = _this$props.auth;\n\n      if (auth) {\n        return React.createElement(Redirect, {\n          to: \"/myQuestion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/loginpage',\n            state: {\n              referrer: this.state.currentLocation\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(UserBar, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, questions.map(function (question) {\n        return React.createElement(Questions, {\n          question: question,\n          answer: user.answers[question.id],\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }).reverse()));\n    }\n  }]);\n\n  return MyQuestions;\n}(React.Component);\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth,\n      users = _ref.users,\n      questions = _ref.questions;\n  var myQuestions = [];\n  var user = users[auth];\n  Object.keys(questions).map(function (k) {\n    return questions[k];\n  }).filter(function (question) {\n    if (user.questions.includes(question.id)) {\n      myQuestions.push(question);\n    }\n  });\n  return {\n    auth: auth,\n    user: users[auth],\n    questions: myQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(MyQuestions);","map":{"version":3,"sources":["/home/akshata/Documents/my-would-you-rather/src/components/MyQuestions.js"],"names":["React","connect","NavBar","UserBar","Questions","Redirect","MyQuestions","props","state","currentLocation","window","location","pathname","questions","user","auth","referrer","map","question","answers","id","reverse","Component","mapStateToProps","users","myQuestions","Object","keys","k","filter","includes","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAEC,MAAM,CAACC,QAAP,CAAgBC;AADtB,KAAb;AAFgB;AAKjB;;;;6BACO;AAAA,wBAC4B,KAAKL,KADjC;AAAA,UACEM,SADF,eACEA,SADF;AAAA,UACaC,IADb,eACaA,IADb;AAAA,UACmBC,IADnB,eACmBA,IADnB;;AAGN,UAAGA,IAAH,EAAQ;AACN,eACE,oBAAC,QAAD;AACA,UAAA,EAAE,EAAC,aADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID,OALD,MAKK;AACH,eACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACZH,YAAAA,QAAQ,EAAE,YADE;AAEZJ,YAAAA,KAAK,EAAE;AAAEQ,cAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC;AAAvB;AAFK,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEC,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAGK,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACID,SAAS,CAACI,GAAV,CAAc,UAAAC,QAAQ;AAAA,eACtB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAEA,QAArB;AAA+B,UAAA,MAAM,EAAEJ,IAAI,CAACK,OAAL,CAAaD,QAAQ,CAACE,EAAtB,CAAvC;AAAkE,UAAA,GAAG,EAAEF,QAAQ,CAACE,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,OAAtB,EAECC,OAFD,EADJ,CAHF,CADF;AAWD;;;;EAlCuBrB,KAAK,CAACsB,S;;AAqChC,SAASC,eAAT,OAAsD;AAAA,MAA1BR,IAA0B,QAA1BA,IAA0B;AAAA,MAApBS,KAAoB,QAApBA,KAAoB;AAAA,MAAbX,SAAa,QAAbA,SAAa;AACpD,MAAIY,WAAW,GAAG,EAAlB;AACA,MAAIX,IAAI,GAAGU,KAAK,CAACT,IAAD,CAAhB;AAEAW,EAAAA,MAAM,CAACC,IAAP,CAAYd,SAAZ,EAAuBI,GAAvB,CAA2B,UAAAW,CAAC;AAAA,WAAIf,SAAS,CAACe,CAAD,CAAb;AAAA,GAA5B,EAA8CC,MAA9C,CAAqD,UAAAX,QAAQ,EAAI;AAC/D,QAAIJ,IAAI,CAACD,SAAL,CAAeiB,QAAf,CAAwBZ,QAAQ,CAACE,EAAjC,CAAJ,EAA0C;AACxCK,MAAAA,WAAW,CAACM,IAAZ,CAAiBb,QAAjB;AACD;AACF,GAJD;AAMA,SAAO;AACLH,IAAAA,IAAI,EAAJA,IADK;AAELD,IAAAA,IAAI,EAAEU,KAAK,CAACT,IAAD,CAFN;AAGLF,IAAAA,SAAS,EAAEY;AAHN,GAAP;AAKD;;AAED,eAAexB,OAAO,CAACsB,eAAD,CAAP,CAAyBjB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport Questions from './Questions';\nimport { Redirect } from 'react-router-dom';\n\nclass MyQuestions extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      currentLocation: window.location.pathname\n    }\n  }\n  render(){\n    const { questions, user, auth } = this.props\n\n    if(auth){\n      return(\n        <Redirect\n        to='/myQuestion' />\n      )\n    }else{\n      return(\n        <Redirect to={{\n          pathname: '/loginpage',\n          state: { referrer: this.state.currentLocation }\n        }} />\n      )\n    }\n    return(\n      <div className=\"container\">\n        <NavBar />\n       <UserBar user={ user } />\n        <div className=\"question-set\">\n          { questions.map(question => (\n            <Questions question={question} answer={user.answers[question.id]} key={question.id} />\n          )).reverse()}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({ auth, users, questions }) {\n  let myQuestions = []\n  let user = users[auth]\n\n  Object.keys(questions).map(k => questions[k]).filter(question => {\n    if (user.questions.includes(question.id)) {\n      myQuestions.push(question)\n    }\n  })\n\n  return {\n    auth,\n    user: users[auth],\n    questions: myQuestions\n  }\n}\n\nexport default connect(mapStateToProps)(MyQuestions);\n"]},"metadata":{},"sourceType":"module"}