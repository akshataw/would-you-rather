{"ast":null,"code":"import _classCallCheck from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/akshata/my-would-you-rather/src/components/HomePage.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n/*class HomePage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      answeredQues: false\n    }\n    this.changeMode = this.changeMode.bind(this)\n  }\n\n  changeMode(){\n    if(this.state.answeredQues){\n      this.setState({\n        answeredQues: false\n      })\n    }\n    else{\n      this.setState({\n        answeredQues: true\n      })\n    }\n    this.forceUpdate()\n  }\n\n  render(){\n    const { answered, unanswered, auth, user } = this.props\n    const { answeredQues } = this.state\n    if(auth === null){\n      return <Redirect to='/loginpage' />\n    }\n    return(\n      <div className=\"container\">\n        <NavBar />\n       <UserBar user={ user } />\n       <br/>\n       <div className=\"questions\" Style=\"float:right;\">\n        <button className={ answeredQues ? 'answered active-link' : 'answered'} onClick={this.changeMode} Style=\"height:50px; font-size:22px; background: #2ECC71; border: 2px solid #229954; border-radius:6px;\">Answered</button>&nbsp;\n        <button className={ answeredQues ? 'unanswered' : 'unanswered active-link'} onClick={this.changeMode} Style=\"height:50px; font-size:22px; background: blue; border: 2px solid #229954; border-radius:6px;\">Unanswered</button>\n       </div>\n       <br/>\n       <br/>\n       <div >\n       <div className=\"question-set\">\n        <center>\n        { answeredQues &&  answered.map(question => (\n          <Questions question={question} heading=\"Answered Questions: \" answer={user.answers[question.id]}  key={question.id} />\n        ))}\n        { !answeredQues &&  unanswered.map(question => (\n          <Questions question={question} key={question.id} heading=\"Unanswered Questions: \" />\n        ))}\n        </center>\n        </div>\n       </div>\n    </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, users, auth}){\n  let user\n  let answered = []\n  let unanswered = []\n  if(auth !== null){\n    user = users[auth]\n  }\n  Object.keys(questions).map(que => questions[que]).filter(question => {\n    if(user.answers.hasOwnProperty(question.id)){\n      answered.push(question)\n    }\n    else{\n      unanswered.push(question)\n    }\n  })\n  return{\n    answered,\n    unanswered,\n    auth,\n    user\n  }\n}\n\nexport default connect(mapStateToProps)(HomePage);*/\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HomePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      'questionsToShow': 'unanswered',\n      'activeTab': 'unanswered'\n    };\n\n    _this.handleTabChange = function (e, tab) {\n      _this.setState(function () {\n        return {\n          questionsToShow: tab,\n          activeTab: tab\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          questionsToShow = _this$state.questionsToShow,\n          activeTab = _this$state.activeTab;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"projectContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info \" + (activeTab === 'unanswered' ? 'active' : null),\n        onClick: function onClick(e) {\n          return _this2.handleTabChange(e, 'unanswered');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Unanswered Questions\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info \" + (activeTab === 'answered' ? 'active' : null),\n        onClick: function onClick(e) {\n          return _this2.handleTabChange(e, 'answered');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Answered Questions\")))), React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.props.questionIds.map(function (id) {\n        return React.createElement(Questions, {\n          key: id,\n          id: id,\n          questionsToShow: questionsToShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nfunction mapStateToProps(_ref) {\n  var questions = _ref.questions;\n  return {\n    questionIds: Object.keys(questions).sort(function (a, b) {\n      return questions[b].timestamp - questions[a].timestamp;\n    })\n  };\n}\n\nexport default connect(mapStateToProps)(HomePage);","map":{"version":3,"sources":["/home/akshata/my-would-you-rather/src/components/HomePage.js"],"names":["React","NavBar","UserBar","Redirect","connect","Questions","HomePage","state","handleTabChange","e","tab","setState","questionsToShow","activeTab","props","questionIds","map","id","Component","mapStateToProps","questions","Object","keys","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n\n/*class HomePage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      answeredQues: false\n    }\n    this.changeMode = this.changeMode.bind(this)\n  }\n\n  changeMode(){\n    if(this.state.answeredQues){\n      this.setState({\n        answeredQues: false\n      })\n    }\n    else{\n      this.setState({\n        answeredQues: true\n      })\n    }\n    this.forceUpdate()\n  }\n\n  render(){\n    const { answered, unanswered, auth, user } = this.props\n    const { answeredQues } = this.state\n    if(auth === null){\n      return <Redirect to='/loginpage' />\n    }\n    return(\n      <div className=\"container\">\n        <NavBar />\n       <UserBar user={ user } />\n       <br/>\n       <div className=\"questions\" Style=\"float:right;\">\n        <button className={ answeredQues ? 'answered active-link' : 'answered'} onClick={this.changeMode} Style=\"height:50px; font-size:22px; background: #2ECC71; border: 2px solid #229954; border-radius:6px;\">Answered</button>&nbsp;\n        <button className={ answeredQues ? 'unanswered' : 'unanswered active-link'} onClick={this.changeMode} Style=\"height:50px; font-size:22px; background: blue; border: 2px solid #229954; border-radius:6px;\">Unanswered</button>\n       </div>\n       <br/>\n       <br/>\n       <div >\n       <div className=\"question-set\">\n        <center>\n        { answeredQues &&  answered.map(question => (\n          <Questions question={question} heading=\"Answered Questions: \" answer={user.answers[question.id]}  key={question.id} />\n        ))}\n        { !answeredQues &&  unanswered.map(question => (\n          <Questions question={question} key={question.id} heading=\"Unanswered Questions: \" />\n        ))}\n        </center>\n        </div>\n       </div>\n    </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, users, auth}){\n  let user\n  let answered = []\n  let unanswered = []\n  if(auth !== null){\n    user = users[auth]\n  }\n  Object.keys(questions).map(que => questions[que]).filter(question => {\n    if(user.answers.hasOwnProperty(question.id)){\n      answered.push(question)\n    }\n    else{\n      unanswered.push(question)\n    }\n  })\n  return{\n    answered,\n    unanswered,\n    auth,\n    user\n  }\n}\n\nexport default connect(mapStateToProps)(HomePage);*/\n\n\nclass HomePage extends React.Component {\n\n    state = {\n        'questionsToShow': 'unanswered',\n        'activeTab': 'unanswered'\n    };\n\n    handleTabChange = (e, tab) => {\n        this.setState(() => ({\n            questionsToShow: tab,\n            activeTab: tab\n        }));\n    };\n\n    render() {\n        const {questionsToShow, activeTab} = this.state;\n\n        return (\n            <div>\n                <div className='projectContainer'>\n                    <div className='container'>\n                        <div className='row justify-content-center'>\n                            <div className='col-sm-8'>\n                                <div className='center'>\n                                    <button type='button'\n                                            className={\"btn btn-info \" + (activeTab === 'unanswered' ? 'active' : null)}\n                                            onClick={(e) => this.handleTabChange(e, 'unanswered')}>Unanswered\n                                        Questions\n                                    </button>\n                                    <button type='button'\n                                            className={\"btn btn-info \" + (activeTab === 'answered' ? 'active' : null)}\n                                            onClick={(e) => this.handleTabChange(e, 'answered')}>Answered\n                                        Questions\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='row justify-content-center'>\n                            <div className='col-sm-8'>\n                                {this.props.questionIds.map((id) => {\n                                    return (\n                                        <Questions key={id} id={id}\n                                                  questionsToShow={questionsToShow}/>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({questions}) {\n    return {\n        questionIds: Object.keys(questions)\n            .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n    }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}