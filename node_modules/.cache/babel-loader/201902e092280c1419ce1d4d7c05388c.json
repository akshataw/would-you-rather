{"ast":null,"code":"import { handleGetUsers, handleSaveUserAnswer, handleAddUserQuestion } from './users';\nimport { handleGetQuestions, handleSaveAnswer, handleAddQuestion } from './questions';\nimport { handleUserLogin } from './auth';\nimport { getInitialData, saveQuestionAnswer, saveQuestion } from '../utils/DataAPI';\nexport var GET_INITIAL_DATA = 'GET_INITIAL_DATA';\nexport function handleInitialData() {\n  return function (dispatch) {\n    getInitialData().then(function (_ref) {\n      var users = _ref.users,\n          questions = _ref.questions;\n      dispatch(handleGetUsers(users));\n      dispatch(handleGetQuestions(questions));\n      dispatch(handleUserLogin(null));\n    });\n  };\n}\nexport function handleAnswer(auth, qid, option) {\n  var data = {\n    authedUser: auth,\n    qid: qid,\n    answer: option\n  };\n  return function (dispatch) {\n    saveQuestionAnswer(data).then(function () {\n      dispatch(handleSaveAnswer(auth, qid, option));\n      dispatch(handleSaveUserAnswer(auth, qid, option));\n    });\n  };\n}\nexport function handleAddQuestionAction(auth, optOne, optTwo) {\n  return function (dispatch) {\n    saveQuestion({\n      optionOneText: optOne,\n      optionTwoText: optTwo,\n      author: auth\n    }).then(function (question) {\n      dispatch(handleAddUserQuestion(question));\n      dispatch(handleAddQuestion(question));\n    });\n  };\n}","map":{"version":3,"sources":["/home/akshata/my-would-you-rather/src/actions/shared.js"],"names":["handleGetUsers","handleSaveUserAnswer","handleAddUserQuestion","handleGetQuestions","handleSaveAnswer","handleAddQuestion","handleUserLogin","getInitialData","saveQuestionAnswer","saveQuestion","GET_INITIAL_DATA","handleInitialData","dispatch","then","users","questions","handleAnswer","auth","qid","option","data","authedUser","answer","handleAddQuestionAction","optOne","optTwo","optionOneText","optionTwoText","author","question"],"mappings":"AAAA,SAASA,cAAT,EACQC,oBADR,EAEQC,qBAFR,QAGa,SAHb;AAIA,SAASC,kBAAT,EACSC,gBADT,EAESC,iBAFT,QAGe,aAHf;AAIA,SAASC,eAAT,QAAgC,QAAhC;AACA,SACEC,cADF,EAEEC,kBAFF,EAGEC,YAHF,QAIO,kBAJP;AAMA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,iBAAT,GAA8B;AACnC,SAAO,UAACC,QAAD,EAAc;AACnBL,IAAAA,cAAc,GAAGM,IAAjB,CAAsB,gBAAwB;AAAA,UAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,UAAfC,SAAe,QAAfA,SAAe;AAC5CH,MAAAA,QAAQ,CAACZ,cAAc,CAACc,KAAD,CAAf,CAAR;AACAF,MAAAA,QAAQ,CAACT,kBAAkB,CAACY,SAAD,CAAnB,CAAR;AACAH,MAAAA,QAAQ,CAACN,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,KAJD;AAKD,GAND;AAOD;AAED,OAAO,SAASU,YAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,MAAlC,EAA0C;AAC/C,MAAMC,IAAI,GAAG;AACXC,IAAAA,UAAU,EAAEJ,IADD;AAEXC,IAAAA,GAAG,EAAHA,GAFW;AAGXI,IAAAA,MAAM,EAAEH;AAHG,GAAb;AAKA,SAAO,UAACP,QAAD,EAAc;AACnBJ,IAAAA,kBAAkB,CAACY,IAAD,CAAlB,CACGP,IADH,CACQ,YAAM;AACVD,MAAAA,QAAQ,CAACR,gBAAgB,CAACa,IAAD,EAAOC,GAAP,EAAYC,MAAZ,CAAjB,CAAR;AACAP,MAAAA,QAAQ,CAACX,oBAAoB,CAACgB,IAAD,EAAOC,GAAP,EAAYC,MAAZ,CAArB,CAAR;AACD,KAJH;AAKD,GAND;AAOD;AAED,OAAO,SAASI,uBAAT,CAAkCN,IAAlC,EAAwCO,MAAxC,EAAgDC,MAAhD,EAAwD;AAC7D,SAAO,UAAAb,QAAQ,EAAI;AACjBH,IAAAA,YAAY,CAAC;AACXiB,MAAAA,aAAa,EAAEF,MADJ;AAEXG,MAAAA,aAAa,EAAEF,MAFJ;AAGXG,MAAAA,MAAM,EAAEX;AAHG,KAAD,CAAZ,CAIGJ,IAJH,CAIQ,UAAAgB,QAAQ,EAAI;AAClBjB,MAAAA,QAAQ,CAACV,qBAAqB,CAAC2B,QAAD,CAAtB,CAAR;AACAjB,MAAAA,QAAQ,CAACP,iBAAiB,CAACwB,QAAD,CAAlB,CAAR;AACD,KAPD;AAQD,GATD;AAUD","sourcesContent":["import { handleGetUsers,\n        handleSaveUserAnswer,\n        handleAddUserQuestion\n      } from './users';\nimport { handleGetQuestions,\n         handleSaveAnswer,\n         handleAddQuestion\n        } from './questions';\nimport { handleUserLogin } from './auth';\nimport {\n  getInitialData,\n  saveQuestionAnswer,\n  saveQuestion\n} from '../utils/DataAPI';\n\nexport const GET_INITIAL_DATA = 'GET_INITIAL_DATA'\n\nexport function handleInitialData () {\n  return (dispatch) => {\n    getInitialData().then(({users, questions}) => {\n      dispatch(handleGetUsers(users))\n      dispatch(handleGetQuestions(questions))\n      dispatch(handleUserLogin(null))\n    })\n  }\n}\n\nexport function handleAnswer (auth, qid, option) {\n  const data = {\n    authedUser: auth,\n    qid,\n    answer: option\n  }\n  return (dispatch) => {\n    saveQuestionAnswer(data)\n      .then(() => {\n        dispatch(handleSaveAnswer(auth, qid, option))\n        dispatch(handleSaveUserAnswer(auth, qid, option))\n      })\n  }\n}\n\nexport function handleAddQuestionAction (auth, optOne, optTwo) {\n  return dispatch => {\n    saveQuestion({\n      optionOneText: optOne,\n      optionTwoText: optTwo,\n      author: auth\n    }).then(question => {\n      dispatch(handleAddUserQuestion(question))\n      dispatch(handleAddQuestion(question))\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}