{"ast":null,"code":"import _classCallCheck from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/akshata/Documents/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/akshata/Documents/my-would-you-rather/src/components/HomePage.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      answeredQues: false,\n      currentLocation: 'localhost:3000/me'\n    };\n    _this.handleSwitch = _this.handleSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"handleSwitch\",\n    value: function handleSwitch(action) {\n      switch (action) {\n        case 'answeredQues':\n          this.setState({\n            answeredQues: true\n          });\n          break;\n\n        case 'unansweredQues':\n          this.setState({\n            answeredQues: false\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          answered = _this$props.answered,\n          unanswered = _this$props.unanswered,\n          auth = _this$props.auth,\n          user = _this$props.user,\n          question = _this$props.question;\n      var answeredQues = this.state.answeredQues;\n      console.log(window.location.origin.toString());\n\n      if (auth) {\n        return React.createElement(Redirect, {\n          to: \"/me\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/loginpage',\n            state: {\n              referrer: this.state.currentLocation\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(UserBar, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"questions\",\n        Style: \"float:center;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questions-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: answeredQues ? 'answeredQues-button button active' : 'answeredQues-button button',\n        onClick: function onClick() {\n          return _this2.handleSwitch('answeredQues');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Answered Questions\"), React.createElement(\"div\", {\n        className: answeredQues ? 'unansweredQues-button button' : 'unansweredQues-button button active',\n        onClick: function onClick() {\n          return _this2.handleSwitch('unansweredQues');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Unanswered Questions\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sections\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: answeredQues ? 'answeredQues-section' : 'answeredQues-section hidden',\n        id: \"answeredQues-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, answeredQues && answered.map(function (question) {\n        return React.createElement(Questions, {\n          question: question,\n          answer: user.answers[question.id],\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }).reverse()), React.createElement(\"div\", {\n        className: answeredQues ? 'unansweredQues-section hidden' : 'unansweredQues-section',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, !answeredQues && unanswered.map(function (question) {\n        return React.createElement(Questions, {\n          question: question,\n          key: question.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }).reverse()))))));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nfunction mapStateToProps(_ref) {\n  var questions = _ref.questions,\n      users = _ref.users,\n      auth = _ref.auth;\n  var user;\n  var answered = [];\n  var unanswered = [];\n\n  if (auth !== null) {\n    user = users[auth];\n  }\n\n  Object.keys(questions).map(function (que) {\n    return questions[que];\n  }).filter(function (question) {\n    if (user) {\n      if (user.answers.hasOwnProperty(question.id)) {\n        answered.push(question);\n      } else {\n        unanswered.push(question);\n      }\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/loginpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  });\n  return {\n    answered: answered,\n    unanswered: unanswered,\n    auth: auth,\n    user: user\n  };\n}\n\nexport default connect(mapStateToProps)(HomePage);","map":{"version":3,"sources":["/home/akshata/Documents/my-would-you-rather/src/components/HomePage.js"],"names":["React","NavBar","UserBar","Redirect","connect","Questions","HomePage","props","state","answeredQues","currentLocation","handleSwitch","bind","action","setState","answered","unanswered","auth","user","question","console","log","window","location","origin","toString","pathname","referrer","map","answers","id","reverse","Component","mapStateToProps","questions","users","Object","keys","que","filter","hasOwnProperty","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\n\nclass HomePage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      answeredQues: false,\n      currentLocation: 'localhost:3000/me'\n    }\n    this.handleSwitch = this.handleSwitch.bind(this);\n }\n\n  handleSwitch(action){\n    switch (action) {\n      case 'answeredQues':\n        this.setState({ answeredQues: true })\n        break\n      case 'unansweredQues':\n        this.setState({ answeredQues: false })\n        break\n      default:\n        break\n    }\n  }\n\n  render(){\n    const { answered, unanswered, auth, user, question } = this.props\n    const { answeredQues } = this.state\n    console.log(window.location.origin.toString())\n    if(auth){\n      return(\n        <Redirect\n        to='/me' />\n      )\n    }else{\n      return(\n        <Redirect to={{\n          pathname: '/loginpage',\n          state: { referrer: this.state.currentLocation }\n        }} />\n      )\n    }\n    return(\n      <div className=\"container\">\n        <NavBar />\n       <UserBar user={ user } />\n       <br/>\n       <div className=\"questions\" Style=\"float:center;\">\n        <div className=\"centered\">\n         <div className=\"questions-box\">\n           <div className=\"buttons\">\n             <div className={answeredQues ? 'answeredQues-button button active' : 'answeredQues-button button'} onClick={() => this.handleSwitch('answeredQues')}>Answered Questions</div>\n             <div className={answeredQues ? 'unansweredQues-button button' : 'unansweredQues-button button active'} onClick={() => this.handleSwitch('unansweredQues')}>Unanswered Questions</div>\n           </div>\n           <br/>\n           <div className=\"sections\">\n           <div className={answeredQues ? 'answeredQues-section' : 'answeredQues-section hidden'} id='answeredQues-section'>\n           { answeredQues &&  answered.map(question => (\n             <Questions question={question} answer={user.answers[question.id]}  key={question.id} />\n           )).reverse()}\n           </div>\n\n           <div className={answeredQues ? 'unansweredQues-section hidden' : 'unansweredQues-section'}>\n             { !answeredQues &&  unanswered.map(question => (\n               <Questions question={question} key={question.id} />\n             )).reverse()}\n           </div>\n           </div>\n         </div>\n       </div>\n       </div>\n    </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, users, auth}){\n  let user\n  let answered = []\n  let unanswered = []\n  if(auth !== null){\n    user = users[auth]\n  }\n  Object.keys(questions).map(que => questions[que]).filter(question => {\n    if(user){\n      if(user.answers.hasOwnProperty(question.id)){\n        answered.push(question)\n      }\n      else{\n        unanswered.push(question)\n      }\n    }\n    else{\n      return(\n        <Redirect to='/loginpage' />\n      )\n    }\n  })\n  return{\n    answered,\n    unanswered,\n    auth,\n    user\n  }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}