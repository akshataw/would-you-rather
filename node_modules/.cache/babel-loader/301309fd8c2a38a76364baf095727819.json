{"ast":null,"code":"var _jsxFileName = \"/home/akshata/Documents/my-would-you-rather/src/components/MyQuestions.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport Questions from './Questions';\nimport { Redirect } from 'react-router-dom';\n\nvar MyQuestion = function MyQuestion(props) {\n  var questions = props.questions,\n      user = props.user,\n      auth = props.auth;\n\n  if (auth === null) {\n    return React.createElement(Redirect, {\n      to: \"/loginpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(UserBar, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"question-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, questions.map(function (question) {\n    return React.createElement(Questions, {\n      question: question,\n      answer: user.answers[question.id],\n      key: question.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }).reverse()));\n};\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth,\n      users = _ref.users,\n      questions = _ref.questions;\n  var myQuestions = [];\n  var user = users[auth];\n  Object.keys(questions).map(function (k) {\n    return questions[k];\n  }).filter(function (question) {\n    if (user.questions.includes(question.id)) {\n      myQuestions.push(question);\n    }\n  });\n  return {\n    auth: auth,\n    user: users[auth],\n    questions: myQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(MyQuestion);","map":{"version":3,"sources":["/home/akshata/Documents/my-would-you-rather/src/components/MyQuestions.js"],"names":["React","connect","NavBar","UserBar","Questions","Redirect","MyQuestion","props","questions","user","auth","map","question","answers","id","reverse","mapStateToProps","users","myQuestions","Object","keys","k","filter","includes","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MACpBC,SADoB,GACMD,KADN,CACpBC,SADoB;AAAA,MACTC,IADS,GACMF,KADN,CACTE,IADS;AAAA,MACHC,IADG,GACMH,KADN,CACHG,IADG;;AAG5B,MAAGA,IAAI,KAAK,IAAZ,EAAiB;AACf,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAGD,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,SAAS,CAACG,GAAV,CAAc,UAAAC,QAAQ;AAAA,WACtB,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA,QAArB;AAA+B,MAAA,MAAM,EAAEH,IAAI,CAACI,OAAL,CAAaD,QAAQ,CAACE,EAAtB,CAAvC;AAAkE,MAAA,GAAG,EAAEF,QAAQ,CAACE,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAtB,EAECC,OAFD,EADJ,CAHF,CADF;AAWD,CAlBD;;AAoBA,SAASC,eAAT,OAAsD;AAAA,MAA1BN,IAA0B,QAA1BA,IAA0B;AAAA,MAApBO,KAAoB,QAApBA,KAAoB;AAAA,MAAbT,SAAa,QAAbA,SAAa;AACpD,MAAIU,WAAW,GAAG,EAAlB;AACA,MAAIT,IAAI,GAAGQ,KAAK,CAACP,IAAD,CAAhB;AAEAS,EAAAA,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBG,GAAvB,CAA2B,UAAAU,CAAC;AAAA,WAAIb,SAAS,CAACa,CAAD,CAAb;AAAA,GAA5B,EAA8CC,MAA9C,CAAqD,UAAAV,QAAQ,EAAI;AAC/D,QAAIH,IAAI,CAACD,SAAL,CAAee,QAAf,CAAwBX,QAAQ,CAACE,EAAjC,CAAJ,EAA0C;AACxCI,MAAAA,WAAW,CAACM,IAAZ,CAAiBZ,QAAjB;AACD;AACF,GAJD;AAMA,SAAO;AACLF,IAAAA,IAAI,EAAJA,IADK;AAELD,IAAAA,IAAI,EAAEQ,KAAK,CAACP,IAAD,CAFN;AAGLF,IAAAA,SAAS,EAAEU;AAHN,GAAP;AAKD;;AAED,eAAejB,OAAO,CAACe,eAAD,CAAP,CAAyBV,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport UserBar from './UserBar';\nimport Questions from './Questions';\nimport { Redirect } from 'react-router-dom';\n\nconst MyQuestion = (props) => {\n  const { questions, user, auth } = props\n  \n  if(auth === null){\n    return <Redirect to='/loginpage' />\n  }\n\n  return(\n    <div className=\"container\">\n      <NavBar />\n     <UserBar user={ user } />\n      <div className=\"question-set\">\n        { questions.map(question => (\n          <Questions question={question} answer={user.answers[question.id]} key={question.id} />\n        )).reverse()}\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps ({ auth, users, questions }) {\n  let myQuestions = []\n  let user = users[auth]\n\n  Object.keys(questions).map(k => questions[k]).filter(question => {\n    if (user.questions.includes(question.id)) {\n      myQuestions.push(question)\n    }\n  })\n\n  return {\n    auth,\n    user: users[auth],\n    questions: myQuestions\n  }\n}\n\nexport default connect(mapStateToProps)(MyQuestion);\n"]},"metadata":{},"sourceType":"module"}