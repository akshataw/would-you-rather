{"ast":null,"code":"import _classCallCheck from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/akshata/my-would-you-rather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/akshata/my-would-you-rather/src/components/Details.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { handleAnswer } from '../actions/shared';\nimport NavBar from './NavBar';\nimport Posts from './Posts';\nimport ErrorPage from './ErrorPage';\n\nvar Details =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Details, _React$Component);\n\n  function Details(props) {\n    var _this;\n\n    _classCallCheck(this, Details);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Details).call(this, props));\n    _this.state = {\n      answer: _this.props.answer\n    };\n    _this.changeMode = _this.changeMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Details, [{\n    key: \"changeMode\",\n    value: function changeMode(id) {\n      var _this$props = this.props,\n          question = _this$props.question,\n          dispatch = _this$props.dispatch,\n          auth = _this$props.auth;\n\n      if (!this.state.answer) {\n        if (id === 1) {\n          dispatch(handleAnswer(auth, question.id, 'optionOne'));\n          this.setState({\n            answer: 'optionOne'\n          });\n        } else {\n          dispatch(handleAnswer(auth, question.id, 'optionTwo'));\n          this.setState({\n            answer: 'optionTwo'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          question = _this$props2.question,\n          auth = _this$props2.auth,\n          user = _this$props2.user,\n          total = _this$props2.total,\n          percentOne = _this$props2.percentOne,\n          percentTwo = _this$props2.percentTwo;\n      var questionID = \"/questions/\".concat(question.id);\n      var answer = this.state.answer;\n\n      if (!questionID) {\n        return React.createElement(ErrorPage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }\n      /*  if(auth === null){\n          return <Redirect to='/loginpage' />\n        }*/\n\n\n      var classes;\n\n      if (answer) {\n        if (answer === 'optionOne') {\n          classes = ['opt option-one selected', 'opt option-two'];\n        } else if (answer === 'optionTwo') {\n          classes = ['opt option-one', 'opt option-two selected'];\n        }\n      } else {\n        classes = ['opt option-one', 'opt option-two'];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"well well-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"well\",\n        Style: \"background: #CCD1D1; border: 2px solid #660099; border-radius: 8px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, question && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Posts, {\n        userId: question.author,\n        time: question.timestamp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes[0],\n        onClick: function onClick() {\n          return _this2.changeMode(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, question.optionOne.text), React.createElement(\"div\", {\n        className: classes[1],\n        onClick: function onClick() {\n          return _this2.changeMode(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, question.optionTwo.text)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), answer && React.createElement(\"div\", {\n        className: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-success\",\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: \"\".concat(percentOne, \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"\".concat(percentOne, \"%\")), React.createElement(\"div\", {\n        className: \"progress-bar progress-bar-warning\",\n        role: \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: \"\".concat(percentTwo, \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"\".concat(percentTwo, \"%\"))), answer && React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Total number of votes: \", total)))));\n    }\n  }]);\n\n  return Details;\n}(React.Component);\n\nfunction mapStateToProps(_ref, _ref2) {\n  var auth = _ref.auth,\n      questions = _ref.questions,\n      users = _ref.users;\n  var match = _ref2.match;\n  var question = questions[match.params.question_id];\n  var answer, percentOne, percentTwo, total;\n\n  if (auth !== null) {\n    var answers = users[auth].answers;\n\n    if (answers.hasOwnProperty(question.id)) {\n      answer = answers[question.id];\n    }\n\n    total = question.optionOne.votes.length + question.optionTwo.votes.length;\n    percentOne = question.optionOne.votes.length / total * 100;\n    percentTwo = question.optionTwo.votes.length / total * 100;\n  }\n\n  return {\n    auth: auth,\n    question: question,\n    answer: answer,\n    total: total,\n    percentOne: percentOne,\n    percentTwo: percentTwo\n  };\n}\n\nexport default connect(mapStateToProps)(Details);","map":{"version":3,"sources":["/home/akshata/my-would-you-rather/src/components/Details.js"],"names":["React","connect","Redirect","handleAnswer","NavBar","Posts","ErrorPage","Details","props","state","answer","changeMode","bind","id","question","dispatch","auth","setState","user","total","percentOne","percentTwo","questionID","classes","author","timestamp","optionOne","text","optionTwo","width","Component","mapStateToProps","questions","users","match","params","question_id","answers","hasOwnProperty","votes","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { handleAnswer } from '../actions/shared';\nimport NavBar from './NavBar';\nimport Posts from './Posts';\nimport ErrorPage from './ErrorPage';\n\nclass Details extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      answer: this.props.answer\n    }\n    this.changeMode = this.changeMode.bind(this)\n  }\n\n  changeMode(id){\n    const { question, dispatch, auth } = this.props\n    if(!this.state.answer){\n      if(id === 1){\n        dispatch(handleAnswer(auth, question.id, 'optionOne'))\n        this.setState({\n          answer: 'optionOne'\n        })\n      }\n       else{\n        dispatch(handleAnswer(auth, question.id, 'optionTwo'))\n        this.setState({\n          answer: 'optionTwo'\n         })\n      }\n    }\n  }\n\n  render(){\n    const { question, auth, user, total, percentOne, percentTwo } = this.props\n    const questionID = `/questions/${question.id}`\n    const { answer } = this.state\n    if(!questionID){\n      return <ErrorPage />\n    }\n  /*  if(auth === null){\n      return <Redirect to='/loginpage' />\n    }*/\n    let classes\n    if(answer){\n      if(answer === 'optionOne'){\n        classes = ['opt option-one selected', 'opt option-two']\n      }\n       else if(answer === 'optionTwo'){\n        classes = ['opt option-one', 'opt option-two selected']\n      }\n    }\n     else{\n      classes = ['opt option-one', 'opt option-two']\n    }\n    return(\n      <div className=\"container\">\n       <div className=\"well well-sm\">\n         <NavBar />\n       </div>\n       <br/>\n       <div className=\"well\" Style=\"background: #CCD1D1; border: 2px solid #660099; border-radius: 8px;\">\n        {question && (\n          <div>\n            <br/>\n            <Posts userId={question.author} time={question.timestamp} />\n            <div className=\"question-set\">\n              <div className=\"options\">\n                <div className={classes[0]} onClick={() => this.changeMode(1)}>{question.optionOne.text}</div>\n                <div className={classes[1]} onClick={() => this.changeMode(2)}>{question.optionTwo.text}</div>\n              </div>\n              <br/>\n              { answer && (\n                <div className=\"progress\">\n                  <div className=\"progress-bar progress-bar-success\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${percentOne}%` }}>{`${percentOne}%`}</div>\n                  <div className=\"progress-bar progress-bar-warning\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${percentTwo}%` }}>{`${percentTwo}%`}</div>\n                </div>\n              )}\n              { answer && (\n                <div className=\"total\">\n                  Total number of votes: {total}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ auth, questions, users }, { match }){\n  let question = questions[match.params.question_id]\n  let answer, percentOne, percentTwo, total\n\n  if(auth !== null){\n    const answers = users[auth].answers\n\n    if(answers.hasOwnProperty(question.id)){\n      answer = answers[question.id]\n    }\n\n    total = question.optionOne.votes.length + question.optionTwo.votes.length\n    percentOne = (question.optionOne.votes.length / total) * 100\n    percentTwo = (question.optionTwo.votes.length / total) * 100\n  }\n\n  return {\n    auth,\n    question,\n    answer,\n    total,\n    percentOne,\n    percentTwo\n  }\n}\n\nexport default connect(mapStateToProps)(Details);\n"]},"metadata":{},"sourceType":"module"}